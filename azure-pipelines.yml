# Deploy to Kubernetes - Review app with Azure DevSpaces
# Build and push image to Azure Container Registry; Deploy to Azure Kuberentes Services and setup Review App with Azure DevSpaces
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:

  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '05d3d15b-c3ba-47a8-8574-bb21f09e7364'
  imageRepository: 'webreviewapp'
  containerRegistry: 'ronacr.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'ronacr3801c5ef-auth'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
  
  # Azure Service connection
  azureConnection: 'e07239d5-3256-415c-ae63-e90cd3c8a5db'
  
  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: '$(system.pullRequest.sourceBranch)'

stages:
- stage: Build
  displayName: Build stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          
    - upload: charts
      artifact: charts

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build

  jobs:
  - deployment: Deploy
    condition: and(succeeded(), not(startsWith(variables['Build.SourceBranch'], 'refs/pull/')))
    displayName: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: 'dev-webreviewapp.reviews'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)

          - task: AzureCLI@2
            displayName: get host suffix
            inputs:
              scriptType: pscore
              scriptLocation: inlineScript
              azureSubscription: $(azureConnection)
              inlineScript: |
                $clusterId="/subscriptions/afc11291-9826-46be-b852-70349146ddf8/resourcegroups/build-rn/providers/Microsoft.ContainerService/managedClusters/dev"
                $resourceGroupName="build-rn"
                $clusterName="dev"
                az aks use-dev-spaces -n $clusterName -g $resourceGroupName -s reviews -y
                $hostSuffix=$(azds show-context -o json | ConvertFrom-Json).hostSuffix
                echo "##vso[task.setvariable variable=HostSuffix]$hostSuffix"

          - task: KubernetesManifest@0
            displayName: Bake manifests
            name: bake
            inputs:
              action: bake
              helmChart: $(Pipeline.Workspace)/charts/devspaces-v0.0.1.tgz
              overrides: |
                image.repository:$(containerRegistry)/$(imageRepository)
                service.port:80 
                ingress.enabled:true
                ingress.hostname:app.$(HostSuffix)
              
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              manifests: |
                $(bake.manifestsBundle)
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

  - deployment: DeployPullRequest
    displayName: Deploy Pull request
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
    pool:
      vmImage: $(vmImageName)
      
    environment: 'dev-webreviewapp.$(k8sNamespaceForPR)'
    strategy:
      runOnce:
        deploy:
          steps:
          - reviewApp: reviews

          - task: Kubernetes@1
            displayName: 'Create a new namespace for the pull request'
            inputs:
              command: apply
              useConfigurationFile: true
              inline: '{ "kind": "Namespace", "apiVersion": "v1", "metadata": { "name": "$(k8sNamespaceForPR)" }}'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              namespace: $(k8sNamespaceForPR)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          
          - task: AzureCLI@2
            displayName: get host suffix
            inputs:
              scriptType: pscore
              scriptLocation: inlineScript
              azureSubscription: $(azureConnection)
              inlineScript: |
                $clusterId="/subscriptions/afc11291-9826-46be-b852-70349146ddf8/resourcegroups/build-rn/providers/Microsoft.ContainerService/managedClusters/dev"
                $resourceGroupName="build-rn"
                $clusterName="dev"
                az aks use-dev-spaces -n $clusterName -g $resourceGroupName -s reviews -y
                $hostSuffix=$(azds show-context -o json | ConvertFrom-Json).hostSuffix
                echo "##vso[task.setvariable variable=HostSuffix]$hostSuffix"

          - task: KubernetesManifest@0
            displayName: Bake manifests
            name: bake
            inputs:
              action: bake
              helmChart: $(Pipeline.Workspace)/charts/devspaces-v0.0.1.tgz
              overrides: |
                image.repository:$(containerRegistry)/$(imageRepository)
                service.port:80 
                ingress.enabled:true
                ingress.hostname:$(k8sNamespaceForPR).s.app.$(HostSuffix)
                
          - task: KubernetesManifest@0
            displayName: Deploy to the new namespace in the Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespaceForPR)
              manifests: |
                $(Pipeline.Workspace)/manifests/deployment.yml
                $(Pipeline.Workspace)/manifests/service.yml
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(tag)

          - script: |
              message="Deployment to your Review App succeeded.<br><br>You can navigate to http://$(k8sNamespaceForPR).s.app.$(HostSuffix) to test your changes"
              echo "##vso[task.setvariable variable=GITHUB_COMMENT]$message"
