trigger:
- master

variables:
  imageName: azure-pipelines-canary-k8s
  tag: '$(Build.BuildId)'
  dockerRegistryServiceConnection: 'd239398a-fb80-44a3-9878-b97b0f733688'
  imageRepository: 'azure-pipelines-canary-k8s'
  containerRegistry: 'ajacr1.azurecr.io'
  imagePullSecret: 'azure-pipelines-canary-k8s'
  vmImageName: 'ubuntu-latest'
  
  # Name of the new namespace being created to deploy the PR changes.
  k8sNamespaceForPR: '$(Build.SourceBranchName)'

stages:
- stage: Build
  displayName: Build Canary
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: Ubuntu-16.04
    steps:
    - task: Docker@2
      displayName: Build and push image
      inputs:
        containerRegistry: ajAcr1
        repository: $(imageName)
        command: buildAndPush
        Dockerfile: app/Dockerfile
        addPipelineData: false
        tags: |
          $(Build.SourceBranchName)_$(Build.BuildId)
    - publish: manifests
      artifact: manifests


- stage: ReviewApps
  displayName: Deploy to ReviewApps
  dependsOn: Build
  jobs:
  - deployment: DeployPullRequest
    displayName: Deploy Pull request
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/pull/'))
    pool:
      vmImage: $(vmImageName)
      
    environment: 'azurepipelinescanaryk8s.$(k8sNamespaceForPR)'
    strategy:
      runOnce:
        deploy:
          steps:
          - checkout: self
          - reviewApp: myapp
          - task: Kubernetes@1
            displayName: 'Create a new namespace for the pull request'
            inputs:
              command: apply
              useConfigurationFile: true
              inline: '{ "kind": "Namespace", "apiVersion": "v1", "metadata": { "name": "$(k8sNamespaceForPR)" }}'

          - task: KubernetesManifest@0
            displayName: Create imagePullSecret
            inputs:
              action: createSecret
              secretName: $(imagePullSecret)
              namespace: $(k8sNamespaceForPR)
              dockerRegistryEndpoint: $(dockerRegistryServiceConnection)
          
          - task: KubernetesManifest@0
            displayName: Deploy to the new namespace in the Kubernetes cluster
            inputs:
              action: deploy
              namespace: $(k8sNamespaceForPR)
              manifests: '$(Build.SourcesDirectory)/manifests/*'
              imagePullSecrets: |
                $(imagePullSecret)
              containers: |
                $(containerRegistry)/$(imageRepository):$(Build.SourceBranchName)_$(Build.BuildId)
          
          - task: Kubernetes@1
            name: get
            displayName: 'Get services in the new namespace'
            continueOnError: true
            inputs:
              command: get
              namespace: $(k8sNamespaceForPR)
              arguments: svc
              outputFormat: jsonpath='http://{.items[0].status.loadBalancer.ingress[0].ip}:{.items[0].spec.ports[0].port}'
              
          # Getting the IP of the deployed service and writing it to a variable for posing comment
          - script: |
              url="$(get.KubectlOutput)"
              message="Your review app has been deployed"
              if [ ! -z "$url" -a "$url" != "http://:" ] 
              then
                message="${message} and is available at $url.<br><br>[Learn More](https://aka.ms/testwithreviewapps) about how to test and provide feedback for the app."
              fi
              echo "##vso[task.setvariable variable=GITHUB_COMMENT]$message"